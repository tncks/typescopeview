Terminals unused in grammar

    ERROR


Grammar

    0 $accept: program $end

    1 program: declaration_list

    2 declaration_list: declaration_list declaration
    3                 | declaration

    4 declaration: var_declaration
    5            | fun_declaration

    6 var_declaration: type_specifier identifier SEMI
    7                | type_specifier identifier LBRACE number RBRACE SEMI

    8 type_specifier: INT
    9               | VOID

   10 fun_declaration: type_specifier identifier LPAREN params RPAREN compound_stmt

   11 params: param_list
   12       | VOID
   13       | %empty

   14 param_list: param_list COMMA param
   15           | param

   16 param: type_specifier identifier
   17      | type_specifier identifier LBRACE RBRACE

   18 compound_stmt: LCURLY local_declarations statement_list RCURLY
   19              | LCURLY statement_list RCURLY
   20              | LCURLY local_declarations RCURLY
   21              | LCURLY RCURLY

   22 local_declarations: local_declarations var_declaration
   23                   | var_declaration

   24 statement_list: statement_list statement
   25               | statement

   26 statement: expression_stmt
   27          | compound_stmt
   28          | selection_stmt
   29          | iteration_stmt
   30          | return_stmt

   31 expression_stmt: expression SEMI
   32                | SEMI

   33 selection_stmt: IF LPAREN expression RPAREN statement
   34               | IF LPAREN expression RPAREN statement ELSE statement

   35 iteration_stmt: WHILE LPAREN expression RPAREN statement

   36 return_stmt: RETURN SEMI
   37            | RETURN expression SEMI

   38 expression: var ASSIGN expression
   39           | simple_expression

   40 var: identifier
   41    | identifier LBRACE expression RBRACE

   42 simple_expression: additive_expression relop additive_expression
   43                  | additive_expression

   44 relop: LT
   45      | LE
   46      | GT
   47      | GE
   48      | EQ
   49      | NE

   50 additive_expression: additive_expression addop term
   51                    | term

   52 addop: PLUS
   53      | MINUS

   54 term: term mulop factor
   55     | factor

   56 mulop: TIMES
   57      | OVER

   58 factor: LPAREN expression RPAREN
   59       | var
   60       | call
   61       | number

   62 call: identifier LPAREN RPAREN
   63     | identifier LPAREN arg_list RPAREN

   64 arg_list: arg_list COMMA expression
   65         | expression

   66 number: NUM

   67 identifier: ID


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IF (258) 33 34
    ELSE (259) 34
    RETURN (260) 36 37
    WHILE (261) 35
    INT (262) 8
    VOID (263) 9 12
    NUM (264) 66
    ID (265) 67
    PLUS (266) 52
    MINUS (267) 53
    OVER (268) 57
    TIMES (269) 56
    LT (270) 44
    LE (271) 45
    GT (272) 46
    GE (273) 47
    EQ (274) 48
    NE (275) 49
    ASSIGN (276) 38
    SEMI (277) 6 7 31 32 36 37
    COMMA (278) 14 64
    LPAREN (279) 10 33 34 35 58 62 63
    RPAREN (280) 10 33 34 35 58 62 63
    LBRACE (281) 7 17 41
    RBRACE (282) 7 17 41
    LCURLY (283) 18 19 20 21
    RCURLY (284) 18 19 20 21
    ERROR (285)
    XIF (286)


Nonterminals, with rules where they appear

    $accept (32)
        on left: 0
    program (33)
        on left: 1
        on right: 0
    declaration_list (34)
        on left: 2 3
        on right: 1 2
    declaration (35)
        on left: 4 5
        on right: 2 3
    var_declaration (36)
        on left: 6 7
        on right: 4 22 23
    type_specifier (37)
        on left: 8 9
        on right: 6 7 10 16 17
    fun_declaration (38)
        on left: 10
        on right: 5
    params (39)
        on left: 11 12 13
        on right: 10
    param_list (40)
        on left: 14 15
        on right: 11 14
    param (41)
        on left: 16 17
        on right: 14 15
    compound_stmt (42)
        on left: 18 19 20 21
        on right: 10 27
    local_declarations (43)
        on left: 22 23
        on right: 18 20 22
    statement_list (44)
        on left: 24 25
        on right: 18 19 24
    statement (45)
        on left: 26 27 28 29 30
        on right: 24 25 33 34 35
    expression_stmt (46)
        on left: 31 32
        on right: 26
    selection_stmt (47)
        on left: 33 34
        on right: 28
    iteration_stmt (48)
        on left: 35
        on right: 29
    return_stmt (49)
        on left: 36 37
        on right: 30
    expression (50)
        on left: 38 39
        on right: 31 33 34 35 37 38 41 58 64 65
    var (51)
        on left: 40 41
        on right: 38 59
    simple_expression (52)
        on left: 42 43
        on right: 39
    relop (53)
        on left: 44 45 46 47 48 49
        on right: 42
    additive_expression (54)
        on left: 50 51
        on right: 42 43 50
    addop (55)
        on left: 52 53
        on right: 50
    term (56)
        on left: 54 55
        on right: 50 51 54
    mulop (57)
        on left: 56 57
        on right: 54
    factor (58)
        on left: 58 59 60 61
        on right: 54 55
    call (59)
        on left: 62 63
        on right: 60
    arg_list (60)
        on left: 64 65
        on right: 63 64
    number (61)
        on left: 66
        on right: 7 61
    identifier (62)
        on left: 67
        on right: 6 7 10 16 17 40 41 62 63


State 0

    0 $accept: . program $end

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    program           go to state 3
    declaration_list  go to state 4
    declaration       go to state 5
    var_declaration   go to state 6
    type_specifier    go to state 7
    fun_declaration   go to state 8


State 1

    8 type_specifier: INT .

    $default  reduce using rule 8 (type_specifier)


State 2

    9 type_specifier: VOID .

    $default  reduce using rule 9 (type_specifier)


State 3

    0 $accept: program . $end

    $end  shift, and go to state 9


State 4

    1 program: declaration_list .
    2 declaration_list: declaration_list . declaration

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 1 (program)

    declaration      go to state 10
    var_declaration  go to state 6
    type_specifier   go to state 7
    fun_declaration  go to state 8


State 5

    3 declaration_list: declaration .

    $default  reduce using rule 3 (declaration_list)


State 6

    4 declaration: var_declaration .

    $default  reduce using rule 4 (declaration)


State 7

    6 var_declaration: type_specifier . identifier SEMI
    7                | type_specifier . identifier LBRACE number RBRACE SEMI
   10 fun_declaration: type_specifier . identifier LPAREN params RPAREN compound_stmt

    ID  shift, and go to state 11

    identifier  go to state 12


State 8

    5 declaration: fun_declaration .

    $default  reduce using rule 5 (declaration)


State 9

    0 $accept: program $end .

    $default  accept


State 10

    2 declaration_list: declaration_list declaration .

    $default  reduce using rule 2 (declaration_list)


State 11

   67 identifier: ID .

    $default  reduce using rule 67 (identifier)


State 12

    6 var_declaration: type_specifier identifier . SEMI
    7                | type_specifier identifier . LBRACE number RBRACE SEMI
   10 fun_declaration: type_specifier identifier . LPAREN params RPAREN compound_stmt

    SEMI    shift, and go to state 13
    LPAREN  shift, and go to state 14
    LBRACE  shift, and go to state 15


State 13

    6 var_declaration: type_specifier identifier SEMI .

    $default  reduce using rule 6 (var_declaration)


State 14

   10 fun_declaration: type_specifier identifier LPAREN . params RPAREN compound_stmt

    INT   shift, and go to state 1
    VOID  shift, and go to state 16

    $default  reduce using rule 13 (params)

    type_specifier  go to state 17
    params          go to state 18
    param_list      go to state 19
    param           go to state 20


State 15

    7 var_declaration: type_specifier identifier LBRACE . number RBRACE SEMI

    NUM  shift, and go to state 21

    number  go to state 22


State 16

    9 type_specifier: VOID .
   12 params: VOID .

    RPAREN    reduce using rule 12 (params)
    $default  reduce using rule 9 (type_specifier)


State 17

   16 param: type_specifier . identifier
   17      | type_specifier . identifier LBRACE RBRACE

    ID  shift, and go to state 11

    identifier  go to state 23


State 18

   10 fun_declaration: type_specifier identifier LPAREN params . RPAREN compound_stmt

    RPAREN  shift, and go to state 24


State 19

   11 params: param_list .
   14 param_list: param_list . COMMA param

    COMMA  shift, and go to state 25

    $default  reduce using rule 11 (params)


State 20

   15 param_list: param .

    $default  reduce using rule 15 (param_list)


State 21

   66 number: NUM .

    $default  reduce using rule 66 (number)


State 22

    7 var_declaration: type_specifier identifier LBRACE number . RBRACE SEMI

    RBRACE  shift, and go to state 26


State 23

   16 param: type_specifier identifier .
   17      | type_specifier identifier . LBRACE RBRACE

    LBRACE  shift, and go to state 27

    $default  reduce using rule 16 (param)


State 24

   10 fun_declaration: type_specifier identifier LPAREN params RPAREN . compound_stmt

    LCURLY  shift, and go to state 28

    compound_stmt  go to state 29


State 25

   14 param_list: param_list COMMA . param

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    type_specifier  go to state 17
    param           go to state 30


State 26

    7 var_declaration: type_specifier identifier LBRACE number RBRACE . SEMI

    SEMI  shift, and go to state 31


State 27

   17 param: type_specifier identifier LBRACE . RBRACE

    RBRACE  shift, and go to state 32


State 28

   18 compound_stmt: LCURLY . local_declarations statement_list RCURLY
   19              | LCURLY . statement_list RCURLY
   20              | LCURLY . local_declarations RCURLY
   21              | LCURLY . RCURLY

    IF      shift, and go to state 33
    RETURN  shift, and go to state 34
    WHILE   shift, and go to state 35
    INT     shift, and go to state 1
    VOID    shift, and go to state 2
    NUM     shift, and go to state 21
    ID      shift, and go to state 11
    SEMI    shift, and go to state 36
    LPAREN  shift, and go to state 37
    LCURLY  shift, and go to state 28
    RCURLY  shift, and go to state 38

    var_declaration      go to state 39
    type_specifier       go to state 40
    compound_stmt        go to state 41
    local_declarations   go to state 42
    statement_list       go to state 43
    statement            go to state 44
    expression_stmt      go to state 45
    selection_stmt       go to state 46
    iteration_stmt       go to state 47
    return_stmt          go to state 48
    expression           go to state 49
    var                  go to state 50
    simple_expression    go to state 51
    additive_expression  go to state 52
    term                 go to state 53
    factor               go to state 54
    call                 go to state 55
    number               go to state 56
    identifier           go to state 57


State 29

   10 fun_declaration: type_specifier identifier LPAREN params RPAREN compound_stmt .

    $default  reduce using rule 10 (fun_declaration)


State 30

   14 param_list: param_list COMMA param .

    $default  reduce using rule 14 (param_list)


State 31

    7 var_declaration: type_specifier identifier LBRACE number RBRACE SEMI .

    $default  reduce using rule 7 (var_declaration)


State 32

   17 param: type_specifier identifier LBRACE RBRACE .

    $default  reduce using rule 17 (param)


State 33

   33 selection_stmt: IF . LPAREN expression RPAREN statement
   34               | IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 58


State 34

   36 return_stmt: RETURN . SEMI
   37            | RETURN . expression SEMI

    NUM     shift, and go to state 21
    ID      shift, and go to state 11
    SEMI    shift, and go to state 59
    LPAREN  shift, and go to state 37

    expression           go to state 60
    var                  go to state 50
    simple_expression    go to state 51
    additive_expression  go to state 52
    term                 go to state 53
    factor               go to state 54
    call                 go to state 55
    number               go to state 56
    identifier           go to state 57


State 35

   35 iteration_stmt: WHILE . LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 61


State 36

   32 expression_stmt: SEMI .

    $default  reduce using rule 32 (expression_stmt)


State 37

   58 factor: LPAREN . expression RPAREN

    NUM     shift, and go to state 21
    ID      shift, and go to state 11
    LPAREN  shift, and go to state 37

    expression           go to state 62
    var                  go to state 50
    simple_expression    go to state 51
    additive_expression  go to state 52
    term                 go to state 53
    factor               go to state 54
    call                 go to state 55
    number               go to state 56
    identifier           go to state 57


State 38

   21 compound_stmt: LCURLY RCURLY .

    $default  reduce using rule 21 (compound_stmt)


State 39

   23 local_declarations: var_declaration .

    $default  reduce using rule 23 (local_declarations)


State 40

    6 var_declaration: type_specifier . identifier SEMI
    7                | type_specifier . identifier LBRACE number RBRACE SEMI

    ID  shift, and go to state 11

    identifier  go to state 63


State 41

   27 statement: compound_stmt .

    $default  reduce using rule 27 (statement)


State 42

   18 compound_stmt: LCURLY local_declarations . statement_list RCURLY
   20              | LCURLY local_declarations . RCURLY
   22 local_declarations: local_declarations . var_declaration

    IF      shift, and go to state 33
    RETURN  shift, and go to state 34
    WHILE   shift, and go to state 35
    INT     shift, and go to state 1
    VOID    shift, and go to state 2
    NUM     shift, and go to state 21
    ID      shift, and go to state 11
    SEMI    shift, and go to state 36
    LPAREN  shift, and go to state 37
    LCURLY  shift, and go to state 28
    RCURLY  shift, and go to state 64

    var_declaration      go to state 65
    type_specifier       go to state 40
    compound_stmt        go to state 41
    statement_list       go to state 66
    statement            go to state 44
    expression_stmt      go to state 45
    selection_stmt       go to state 46
    iteration_stmt       go to state 47
    return_stmt          go to state 48
    expression           go to state 49
    var                  go to state 50
    simple_expression    go to state 51
    additive_expression  go to state 52
    term                 go to state 53
    factor               go to state 54
    call                 go to state 55
    number               go to state 56
    identifier           go to state 57


State 43

   19 compound_stmt: LCURLY statement_list . RCURLY
   24 statement_list: statement_list . statement

    IF      shift, and go to state 33
    RETURN  shift, and go to state 34
    WHILE   shift, and go to state 35
    NUM     shift, and go to state 21
    ID      shift, and go to state 11
    SEMI    shift, and go to state 36
    LPAREN  shift, and go to state 37
    LCURLY  shift, and go to state 28
    RCURLY  shift, and go to state 67

    compound_stmt        go to state 41
    statement            go to state 68
    expression_stmt      go to state 45
    selection_stmt       go to state 46
    iteration_stmt       go to state 47
    return_stmt          go to state 48
    expression           go to state 49
    var                  go to state 50
    simple_expression    go to state 51
    additive_expression  go to state 52
    term                 go to state 53
    factor               go to state 54
    call                 go to state 55
    number               go to state 56
    identifier           go to state 57


State 44

   25 statement_list: statement .

    $default  reduce using rule 25 (statement_list)


State 45

   26 statement: expression_stmt .

    $default  reduce using rule 26 (statement)


State 46

   28 statement: selection_stmt .

    $default  reduce using rule 28 (statement)


State 47

   29 statement: iteration_stmt .

    $default  reduce using rule 29 (statement)


State 48

   30 statement: return_stmt .

    $default  reduce using rule 30 (statement)


State 49

   31 expression_stmt: expression . SEMI

    SEMI  shift, and go to state 69


State 50

   38 expression: var . ASSIGN expression
   59 factor: var .

    ASSIGN  shift, and go to state 70

    $default  reduce using rule 59 (factor)


State 51

   39 expression: simple_expression .

    $default  reduce using rule 39 (expression)


State 52

   42 simple_expression: additive_expression . relop additive_expression
   43                  | additive_expression .
   50 additive_expression: additive_expression . addop term

    PLUS   shift, and go to state 71
    MINUS  shift, and go to state 72
    LT     shift, and go to state 73
    LE     shift, and go to state 74
    GT     shift, and go to state 75
    GE     shift, and go to state 76
    EQ     shift, and go to state 77
    NE     shift, and go to state 78

    $default  reduce using rule 43 (simple_expression)

    relop  go to state 79
    addop  go to state 80


State 53

   51 additive_expression: term .
   54 term: term . mulop factor

    OVER   shift, and go to state 81
    TIMES  shift, and go to state 82

    $default  reduce using rule 51 (additive_expression)

    mulop  go to state 83


State 54

   55 term: factor .

    $default  reduce using rule 55 (term)


State 55

   60 factor: call .

    $default  reduce using rule 60 (factor)


State 56

   61 factor: number .

    $default  reduce using rule 61 (factor)


State 57

   40 var: identifier .
   41    | identifier . LBRACE expression RBRACE
   62 call: identifier . LPAREN RPAREN
   63     | identifier . LPAREN arg_list RPAREN

    LPAREN  shift, and go to state 84
    LBRACE  shift, and go to state 85

    $default  reduce using rule 40 (var)


State 58

   33 selection_stmt: IF LPAREN . expression RPAREN statement
   34               | IF LPAREN . expression RPAREN statement ELSE statement

    NUM     shift, and go to state 21
    ID      shift, and go to state 11
    LPAREN  shift, and go to state 37

    expression           go to state 86
    var                  go to state 50
    simple_expression    go to state 51
    additive_expression  go to state 52
    term                 go to state 53
    factor               go to state 54
    call                 go to state 55
    number               go to state 56
    identifier           go to state 57


State 59

   36 return_stmt: RETURN SEMI .

    $default  reduce using rule 36 (return_stmt)


State 60

   37 return_stmt: RETURN expression . SEMI

    SEMI  shift, and go to state 87


State 61

   35 iteration_stmt: WHILE LPAREN . expression RPAREN statement

    NUM     shift, and go to state 21
    ID      shift, and go to state 11
    LPAREN  shift, and go to state 37

    expression           go to state 88
    var                  go to state 50
    simple_expression    go to state 51
    additive_expression  go to state 52
    term                 go to state 53
    factor               go to state 54
    call                 go to state 55
    number               go to state 56
    identifier           go to state 57


State 62

   58 factor: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 89


State 63

    6 var_declaration: type_specifier identifier . SEMI
    7                | type_specifier identifier . LBRACE number RBRACE SEMI

    SEMI    shift, and go to state 13
    LBRACE  shift, and go to state 15


State 64

   20 compound_stmt: LCURLY local_declarations RCURLY .

    $default  reduce using rule 20 (compound_stmt)


State 65

   22 local_declarations: local_declarations var_declaration .

    $default  reduce using rule 22 (local_declarations)


State 66

   18 compound_stmt: LCURLY local_declarations statement_list . RCURLY
   24 statement_list: statement_list . statement

    IF      shift, and go to state 33
    RETURN  shift, and go to state 34
    WHILE   shift, and go to state 35
    NUM     shift, and go to state 21
    ID      shift, and go to state 11
    SEMI    shift, and go to state 36
    LPAREN  shift, and go to state 37
    LCURLY  shift, and go to state 28
    RCURLY  shift, and go to state 90

    compound_stmt        go to state 41
    statement            go to state 68
    expression_stmt      go to state 45
    selection_stmt       go to state 46
    iteration_stmt       go to state 47
    return_stmt          go to state 48
    expression           go to state 49
    var                  go to state 50
    simple_expression    go to state 51
    additive_expression  go to state 52
    term                 go to state 53
    factor               go to state 54
    call                 go to state 55
    number               go to state 56
    identifier           go to state 57


State 67

   19 compound_stmt: LCURLY statement_list RCURLY .

    $default  reduce using rule 19 (compound_stmt)


State 68

   24 statement_list: statement_list statement .

    $default  reduce using rule 24 (statement_list)


State 69

   31 expression_stmt: expression SEMI .

    $default  reduce using rule 31 (expression_stmt)


State 70

   38 expression: var ASSIGN . expression

    NUM     shift, and go to state 21
    ID      shift, and go to state 11
    LPAREN  shift, and go to state 37

    expression           go to state 91
    var                  go to state 50
    simple_expression    go to state 51
    additive_expression  go to state 52
    term                 go to state 53
    factor               go to state 54
    call                 go to state 55
    number               go to state 56
    identifier           go to state 57


State 71

   52 addop: PLUS .

    $default  reduce using rule 52 (addop)


State 72

   53 addop: MINUS .

    $default  reduce using rule 53 (addop)


State 73

   44 relop: LT .

    $default  reduce using rule 44 (relop)


State 74

   45 relop: LE .

    $default  reduce using rule 45 (relop)


State 75

   46 relop: GT .

    $default  reduce using rule 46 (relop)


State 76

   47 relop: GE .

    $default  reduce using rule 47 (relop)


State 77

   48 relop: EQ .

    $default  reduce using rule 48 (relop)


State 78

   49 relop: NE .

    $default  reduce using rule 49 (relop)


State 79

   42 simple_expression: additive_expression relop . additive_expression

    NUM     shift, and go to state 21
    ID      shift, and go to state 11
    LPAREN  shift, and go to state 37

    var                  go to state 92
    additive_expression  go to state 93
    term                 go to state 53
    factor               go to state 54
    call                 go to state 55
    number               go to state 56
    identifier           go to state 57


State 80

   50 additive_expression: additive_expression addop . term

    NUM     shift, and go to state 21
    ID      shift, and go to state 11
    LPAREN  shift, and go to state 37

    var         go to state 92
    term        go to state 94
    factor      go to state 54
    call        go to state 55
    number      go to state 56
    identifier  go to state 57


State 81

   57 mulop: OVER .

    $default  reduce using rule 57 (mulop)


State 82

   56 mulop: TIMES .

    $default  reduce using rule 56 (mulop)


State 83

   54 term: term mulop . factor

    NUM     shift, and go to state 21
    ID      shift, and go to state 11
    LPAREN  shift, and go to state 37

    var         go to state 92
    factor      go to state 95
    call        go to state 55
    number      go to state 56
    identifier  go to state 57


State 84

   62 call: identifier LPAREN . RPAREN
   63     | identifier LPAREN . arg_list RPAREN

    NUM     shift, and go to state 21
    ID      shift, and go to state 11
    LPAREN  shift, and go to state 37
    RPAREN  shift, and go to state 96

    expression           go to state 97
    var                  go to state 50
    simple_expression    go to state 51
    additive_expression  go to state 52
    term                 go to state 53
    factor               go to state 54
    call                 go to state 55
    arg_list             go to state 98
    number               go to state 56
    identifier           go to state 57


State 85

   41 var: identifier LBRACE . expression RBRACE

    NUM     shift, and go to state 21
    ID      shift, and go to state 11
    LPAREN  shift, and go to state 37

    expression           go to state 99
    var                  go to state 50
    simple_expression    go to state 51
    additive_expression  go to state 52
    term                 go to state 53
    factor               go to state 54
    call                 go to state 55
    number               go to state 56
    identifier           go to state 57


State 86

   33 selection_stmt: IF LPAREN expression . RPAREN statement
   34               | IF LPAREN expression . RPAREN statement ELSE statement

    RPAREN  shift, and go to state 100


State 87

   37 return_stmt: RETURN expression SEMI .

    $default  reduce using rule 37 (return_stmt)


State 88

   35 iteration_stmt: WHILE LPAREN expression . RPAREN statement

    RPAREN  shift, and go to state 101


State 89

   58 factor: LPAREN expression RPAREN .

    $default  reduce using rule 58 (factor)


State 90

   18 compound_stmt: LCURLY local_declarations statement_list RCURLY .

    $default  reduce using rule 18 (compound_stmt)


State 91

   38 expression: var ASSIGN expression .

    $default  reduce using rule 38 (expression)


State 92

   59 factor: var .

    $default  reduce using rule 59 (factor)


State 93

   42 simple_expression: additive_expression relop additive_expression .
   50 additive_expression: additive_expression . addop term

    PLUS   shift, and go to state 71
    MINUS  shift, and go to state 72

    $default  reduce using rule 42 (simple_expression)

    addop  go to state 80


State 94

   50 additive_expression: additive_expression addop term .
   54 term: term . mulop factor

    OVER   shift, and go to state 81
    TIMES  shift, and go to state 82

    $default  reduce using rule 50 (additive_expression)

    mulop  go to state 83


State 95

   54 term: term mulop factor .

    $default  reduce using rule 54 (term)


State 96

   62 call: identifier LPAREN RPAREN .

    $default  reduce using rule 62 (call)


State 97

   65 arg_list: expression .

    $default  reduce using rule 65 (arg_list)


State 98

   63 call: identifier LPAREN arg_list . RPAREN
   64 arg_list: arg_list . COMMA expression

    COMMA   shift, and go to state 102
    RPAREN  shift, and go to state 103


State 99

   41 var: identifier LBRACE expression . RBRACE

    RBRACE  shift, and go to state 104


State 100

   33 selection_stmt: IF LPAREN expression RPAREN . statement
   34               | IF LPAREN expression RPAREN . statement ELSE statement

    IF      shift, and go to state 33
    RETURN  shift, and go to state 34
    WHILE   shift, and go to state 35
    NUM     shift, and go to state 21
    ID      shift, and go to state 11
    SEMI    shift, and go to state 36
    LPAREN  shift, and go to state 37
    LCURLY  shift, and go to state 28

    compound_stmt        go to state 41
    statement            go to state 105
    expression_stmt      go to state 45
    selection_stmt       go to state 46
    iteration_stmt       go to state 47
    return_stmt          go to state 48
    expression           go to state 49
    var                  go to state 50
    simple_expression    go to state 51
    additive_expression  go to state 52
    term                 go to state 53
    factor               go to state 54
    call                 go to state 55
    number               go to state 56
    identifier           go to state 57


State 101

   35 iteration_stmt: WHILE LPAREN expression RPAREN . statement

    IF      shift, and go to state 33
    RETURN  shift, and go to state 34
    WHILE   shift, and go to state 35
    NUM     shift, and go to state 21
    ID      shift, and go to state 11
    SEMI    shift, and go to state 36
    LPAREN  shift, and go to state 37
    LCURLY  shift, and go to state 28

    compound_stmt        go to state 41
    statement            go to state 106
    expression_stmt      go to state 45
    selection_stmt       go to state 46
    iteration_stmt       go to state 47
    return_stmt          go to state 48
    expression           go to state 49
    var                  go to state 50
    simple_expression    go to state 51
    additive_expression  go to state 52
    term                 go to state 53
    factor               go to state 54
    call                 go to state 55
    number               go to state 56
    identifier           go to state 57


State 102

   64 arg_list: arg_list COMMA . expression

    NUM     shift, and go to state 21
    ID      shift, and go to state 11
    LPAREN  shift, and go to state 37

    expression           go to state 107
    var                  go to state 50
    simple_expression    go to state 51
    additive_expression  go to state 52
    term                 go to state 53
    factor               go to state 54
    call                 go to state 55
    number               go to state 56
    identifier           go to state 57


State 103

   63 call: identifier LPAREN arg_list RPAREN .

    $default  reduce using rule 63 (call)


State 104

   41 var: identifier LBRACE expression RBRACE .

    $default  reduce using rule 41 (var)


State 105

   33 selection_stmt: IF LPAREN expression RPAREN statement .
   34               | IF LPAREN expression RPAREN statement . ELSE statement

    ELSE  shift, and go to state 108

    $default  reduce using rule 33 (selection_stmt)


State 106

   35 iteration_stmt: WHILE LPAREN expression RPAREN statement .

    $default  reduce using rule 35 (iteration_stmt)


State 107

   64 arg_list: arg_list COMMA expression .

    $default  reduce using rule 64 (arg_list)


State 108

   34 selection_stmt: IF LPAREN expression RPAREN statement ELSE . statement

    IF      shift, and go to state 33
    RETURN  shift, and go to state 34
    WHILE   shift, and go to state 35
    NUM     shift, and go to state 21
    ID      shift, and go to state 11
    SEMI    shift, and go to state 36
    LPAREN  shift, and go to state 37
    LCURLY  shift, and go to state 28

    compound_stmt        go to state 41
    statement            go to state 109
    expression_stmt      go to state 45
    selection_stmt       go to state 46
    iteration_stmt       go to state 47
    return_stmt          go to state 48
    expression           go to state 49
    var                  go to state 50
    simple_expression    go to state 51
    additive_expression  go to state 52
    term                 go to state 53
    factor               go to state 54
    call                 go to state 55
    number               go to state 56
    identifier           go to state 57


State 109

   34 selection_stmt: IF LPAREN expression RPAREN statement ELSE statement .

    $default  reduce using rule 34 (selection_stmt)
